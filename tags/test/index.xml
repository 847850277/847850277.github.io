<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>test - Tag - ZhengPengDe Blog</title>
        <link>https://847850277.github.io/tags/test/</link>
        <description>test - Tag - ZhengPengDe Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 01 Jun 2023 09:00:00 &#43;0000</lastBuildDate><atom:link href="https://847850277.github.io/tags/test/" rel="self" type="application/rss+xml" /><item>
    <title>非正规集成&#43;压力测试</title>
    <link>https://847850277.github.io/posts/2023/renewal_integration_testing/</link>
    <pubDate>Thu, 01 Jun 2023 09:00:00 &#43;0000</pubDate>
    <author>zhengpengde</author>
    <guid>https://847850277.github.io/posts/2023/renewal_integration_testing/</guid>
    <description><![CDATA[非正规集成测试和性能测试 6月份公司最重要的续费活动就要开始了,期间功能方面的改动不是特别大。但需要做性能测试和全部数据方面的验证。 基于以上(全部数据的验证、性能测试)目的，于是需要对接口进行性能测试。
1、工具调研 在工具调研方面，市面上常见的性能测试工具有以下。
JMeter Apache Bench TestNG LoadRunner 基于熟悉上手和对公司业务数据的了解程度，最后选择了TestNG。原因有:
编码方便，灵活 数据驱动方式还不错 灵活的设置线程数 基于TestNG可以很灵活的设计一样宽表来保存结果集。 最后设计的表结构如下 create table renewalintegrationtesting.t_2023_renewal_list ( id bigint auto_increment primary key, student_num varchar(128) null, student_id varchar(36) null, phone varchar(255) null, customer_id varchar(500) null, app_token varchar(255) null, authorization varchar(255) null, step1_url varchar(500) null comment &#39;步骤一的接口地址&#39;, step1_request text null, step1_response text null, step1_success tinyint default 0 not null comment &#39;步骤一执行结果0-不成功1-成功&#39;, step2_url varchar(500) null comment &#39;步骤二的接口地址&#39;, step2_request text null, step2_response text null, step2_success tinyint default 0 not null comment &#39;步骤二执行结果0-不成功1-成功&#39;, step3_url varchar(500) null comment &#39;步骤3的接口地址&#39;, step3_request text null, step3_response text null, step3_success tinyint default 0 not null comment &#39;步骤3执行结果0-不成功1-成功&#39;, step4_url varchar(500) null comment &#39;步骤4的接口地址&#39;, step4_request text null, step4_response text null, step4_success tinyint default 0 not null comment &#39;步骤4执行结果0-不成功1-成功&#39;, step5_url varchar(500) null comment &#39;步骤5的接口地址&#39;, step5_request text null, step5_response text null, step5_success tinyint default 0 not null comment &#39;步骤5执行结果0-不成功1-成功&#39;, step6_url varchar(500) null comment &#39;步骤6的接口地址&#39;, step6_request text null, step6_response text null, step6_success tinyint default 0 not null comment &#39;步骤6执行结果0-不成功1-成功&#39;, step7_url varchar(500) null comment &#39;步骤7的接口地址&#39;, step7_request text null, step7_response text null, step7_success tinyint default 0 not null comment &#39;步骤7执行结果0-不成功1-成功&#39;, step8_url varchar(500) null comment &#39;步骤8的接口地址&#39;, step8_request text null, step8_response text null, step8_success tinyint default 0 not null comment &#39;步骤8执行结果0-不成功1-成功&#39;, step9_url varchar(500) null comment &#39;步骤9的接口地址&#39;, step9_request text null, step9_response text null, step9_success tinyint default 0 not null comment &#39;步骤9执行结果0-不成功1-成功&#39;, step10_url varchar(500) null comment &#39;步骤10的接口地址&#39;, step10_request text null, step10_response text null, step10_success tinyint default 0 not null comment &#39;步骤10执行结果0-不成功1-成功&#39; ); 2、测试用例的编写 示例测试用例代码如查看订单列表]]></description>
</item>
</channel>
</rss>
