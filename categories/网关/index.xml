<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>网关 - Category - ZhengPengDe Blog</title>
        <link>https://847850277.github.io/categories/%E7%BD%91%E5%85%B3/</link>
        <description>网关 - Category - ZhengPengDe Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 29 Oct 2023 09:00:00 &#43;0000</lastBuildDate><atom:link href="https://847850277.github.io/categories/%E7%BD%91%E5%85%B3/" rel="self" type="application/rss+xml" /><item>
    <title>WEB网关系列02-基于http协议实现流量的代理</title>
    <link>https://847850277.github.io/posts/gateway/gateway-02-http-proxy/</link>
    <pubDate>Sun, 29 Oct 2023 09:00:00 &#43;0000</pubDate>
    <author>zhengpengde</author>
    <guid>https://847850277.github.io/posts/gateway/gateway-02-http-proxy/</guid>
    <description><![CDATA[基于http协议实现流量的代理 模式之间差异 直连模式 代理模式 直连模式 直连模式，也就是服务与服务之间直接请求调用，比如说我们正常在浏览器上面输入baidu,然后浏览器把百度相应的响应反馈回来的过程。 这个过程种，用户充当了service-A的角色，百度的服务器充当了service-B的角色。
代码还原以上过程，利用java的Java.net.HttpURLConnection类实现网络访问 除了HttpURLConnection还有很多java封装的包也能实现网络访问 通过common封装好HttpClient； 通过 Apache 封装好CloseableHttpClient； 通过SpringBoot-RestTemplate； import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.net.HttpURLConnection; import java.net.URL; import java.nio.charset.StandardCharsets; public class DirectMode { public static void main(String[] args) { String api = &#34;https://www.baidu.com&#34;; HttpURLConnection connection = null; InputStream in = null; BufferedReader reader = null; try { //构造一个URL对象 URL url = new URL(api); //获取URLConnection对象 connection = (HttpURLConnection) url.openConnection(); //getOutputStream会隐含的进行connect(即：如同调用上面的connect()方法，所以在开发中不调用connect()也可以) in = connection.]]></description>
</item>
<item>
    <title>WEB网关系列01-什么是WEB网关</title>
    <link>https://847850277.github.io/posts/gateway/gateway-01/</link>
    <pubDate>Tue, 10 Oct 2023 09:00:00 &#43;0000</pubDate>
    <author>zhengpengde</author>
    <guid>https://847850277.github.io/posts/gateway/gateway-01/</guid>
    <description><![CDATA[WEB网关系列-什么是WEB网关 gateway，我们一般都称为网关。翻译意思有网关;(通往其他地区的)门户;方法;途径;出入口;手段;门道;大门口。
现实生活中的网关有比如，高速公路的收费口、城门入口、景区或者游乐园的入口等。它们都充当了入口的功能，还有检测功能等等。
而在web中的网关，它充当的是流量的入口，一般来说当有流量进入到web程序，它的第一层便是经过网关，然后经网关代理到准确的服务地址上， 同时，对应的服务产生响应，然后网关把响应反馈回去。那么网关就充当了，流量转发的角色， 个人觉得它是一个网关最核心的功能。
在流量转发这个场景下，可以衍生出无数种组合出来。因为，我们的web应用程序存在的方式是多种多样的，比如在线购物网站、wps、视频网站等等。当然市面上常用的就是基于http协议的web服务， 还有tcp、udp、websocket等。
除了流量转发，网关还需要限制恶意的请求过来，仅正确的用户、正确的请求才可以通过，也就是网关需要提供鉴权的功能。
网关还有就是限制请求流量的作用，举个例子来说，当一台计算机器它的瞬时处理能力只有1千个请求，那瞬时有2千个请求过来，网关处理不过来的话， 限流就在这种场景下面产生了。]]></description>
</item>
</channel>
</rss>
